// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Hotel {
  id                  String    @id @default(uuid())
  user_id             String
  title               String    @db.VarChar(255)
  description         String    @db.Text
  image               String
  country             String
  state               String
  city                String
  locationDescription String    @db.VarChar(255)
  gym                 Boolean   @default(false)
  spa                 Boolean   @default(false)
  bar                 Boolean   @default(false)
  laundry             Boolean   @default(false)
  restaurant          Boolean   @default(false)
  shopping            Boolean   @default(false)
  freeParking         Boolean   @default(false)
  bikeRental          Boolean   @default(false)
  freeWifi            Boolean   @default(false)
  movieNights         Boolean   @default(false)
  swimmingPoll        Boolean   @default(false)
  coffeeShop          Boolean   @default(false)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @default(now())
  rooms               Room[]
  bookings            Booking[]
}

model Room {
  id            String    @id @default(uuid())
  hotelId       String
  title         String
  description   String
  bedCount      Int       @default(0)
  guestCount    Int       @default(0)
  bathroomCount Int       @default(0)
  kindBedCount  Int       @default(0)
  queenBedCount Int       @default(0)
  roomPrice     Int
  roomService   Boolean   @default(false)
  TV            Boolean   @default(false)
  balcony       Boolean   @default(false)
  freeWifi      Boolean   @default(false)
  cityView      Boolean   @default(false)
  ocenView      Boolean   @default(false)
  forestView    Boolean   @default(false)
  mountainView  Boolean   @default(false)
  airCondition  Boolean   @default(false)
  soundProofed  Boolean   @default(false)
  bookings      Booking[]
  Hotel         Hotel     @relation(fields: [hotelId], references: [id], onDelete: Cascade)

  @@index([hotelId])
}

model Booking {
  id                String   @id @default(uuid())
  userName          String
  userId            String
  roomId            String
  hotelId           String
  hotelOwnerId      String
  startDate         DateTime
  endDate           DateTime
  breakfastIncluded Boolean  @default(false)
  currency          String
  totalPrice        Int
  paymentStatus     Boolean  @default(false)
  paymentIntentId   String   @unique
  bookedAt          DateTime @default(now())

  Hotel Hotel @relation(fields: [hotelId], references: [id])
  Room  Room  @relation(fields: [roomId], references: [id])

  @@index([hotelId])
  @@index([roomId])
}
